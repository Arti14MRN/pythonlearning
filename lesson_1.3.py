#1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def task_1(num1,num2):
    try:
        res = num1 / num2
    except ZeroDivisionError:
        return
    return res
#2. Выполнить функцию, которая принимает несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Осуществить вывод данных о пользователе одной строкой.
def task_2(name, surname, data_birthday, city, email, phone):
    print(f"Меня зовут {surname} {name}, я родился {data_birthday}, в г. {city}, моя почта {email}, вот мой номер {phone}")
#3. Реализовать функцию my_func(), которая принимает три позиционных аргумента и возвращает сумму наибольших двух аргументов.
def task_3(a,b,c):
    if (a + b) > (a + c) and (a + b) > (b + c):
        print(f'a+b')
        return a + b
    if (a + c) > (a + b) and (a + c) > (b + c):
        print(f'a+c')
        return a + c
    if (b + c) > (a + b) and (b + c) > (a + c):
        print(f'b+c')
        return b + c
#4. Программа принимает действительное положительное число x и целое отрицательное число y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
def task_4(pos,neg):
    if neg <0:
        temp=pos
        neg=neg *-1
    for i in range(neg-1):
        temp *=pos
    res = 1/temp
    return res
#5. Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
#Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
def task_5():
    def my_sum(my_list):
        items_sum = 0
        for item in my_list:
            try:
                items_sum += float(item)
            except ValueError:
                continue
        return items_sum

    def sum_my_string(s):
        s = s.replace('#', '')
        s = s.replace(',', '.')
        numbers = s.split(' ')
        return my_sum(numbers)

    numbers_sum = 0

    while True:
        numbers_string = input("Введите строку чисел, разделенных пробелом. Для завершения введите символ '!'\n")
        numbers_sum += sum_my_string(numbers_string)
        if numbers_sum != 0:
            print(f"Сумма значений элементов {numbers_sum}")
        if numbers_string.count('!') > 0:
            break
#6. Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
#7. Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте написанную ранее функцию int_func().

def task_6_7():
    def int_func(word: str):
        first_char = word[:1]
        big_first_char = first_char.upper()
        tail = word[1:]
        return big_first_char + tail

    def int_func_ext(row: str):
        result = []
        words = row.split(' ')
        for item in words:
            result.append(int_func(item))
        return ' '.join(result)

    string = input("Введите строку:\n")
    print(f"{int_func_ext(string)}")
if __name__ == "__main__":
    # print(task_1(3,4))
    # task_2('Ivan','Ivanov', 1990, 'Moscow', 'asd@gmail.com', '+799999999')
    # print(task_3(1,2,3))
    # print(task_4(5,-4))
    # task_5()
    task_6_7()
